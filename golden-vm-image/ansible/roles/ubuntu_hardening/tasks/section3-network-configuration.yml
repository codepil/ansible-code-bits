---
- name: "Disable IPv6"
  sysctl:
      name: "{{ item }}"
      value: "1"
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - net.ipv6.conf.all.disable_ipv6
      - net.ipv6.conf.default.disable_ipv6
      - net.ipv6.conf.lo.disable_ipv6
  when:
      - not var_ipv6_required
      - disable_ipv6

- name: "Disable IPv6"
  replace:
      dest: /etc/default/grub
      regexp: '^(GRUB_CMDLINE_LINUX=(?!.*ipv6.disable)\"[^\"]*)(\".*)'
      replace: '\1 ipv6.disable=1\2'
  failed_when: true
  when:
      - not var_ipv6_required
      - disable_ipv6
  notify:
      - generate new grub config

- name: "Ensure packet redirect sending is disabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - {name: net.ipv4.conf.all.send_redirects, value: 0}
      - {name: net.ipv4.conf.default.send_redirects, value: 0}
  when:
      - packet_redirect_sending_is_disabled
  notify:
      - sysctl flush ipv4 route table

- name: "Ensure IP forwarding is disabled"
  block:
      - name: "Ensure IP forwarding is disabled | ipv4"
        sysctl:
            name: net.ipv4.ip_forward
            value: "0"
            state: present
            reload: true
            ignoreerrors: true
        notify:
            - sysctl flush ipv4 route table

      - name: "Ensure IP forwarding is disabled | ipv6"
        sysctl:
            name: net.ipv6.conf.all.forwarding
            value: "0"
            state: present
            reload: true
            ignoreerrors: true
        notify:
            - sysctl flush ipv6 route table
  when:
      - ip_forwarding_is_disabled

- name: "Ensure source routed packets are not accepted"
  block:
      - name: "Ensure source routed packets are not accepted | ipv4"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - {name: net.ipv4.conf.all.accept_source_route, value: 0}
            - {name: net.ipv4.conf.default.accept_source_route, value: 0}
        notify:
            - sysctl flush ipv4 route table

      - name: "Ensure source routed packets are not accepted | ipv6"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - {name: net.ipv6.conf.all.accept_source_route, value: 0}
            - {name: net.ipv6.conf.default.accept_source_route, value: 0}
        notify:
            - sysctl flush ipv6 route table
  when:
      - source_routed_packets_are_not_accepted

- name: "Ensure ICMP redirects are not accepted | ipv4,ipv6"
  block:
      - name: "Ensure ICMP redirects are not accepted | ipv4"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - {name: net.ipv4.conf.all.accept_redirects, value: 0}
            - {name: net.ipv4.conf.default.accept_redirects, value: 0}
        notify:
            - sysctl flush ipv4 route table

      - name: "Ensure ICMP redirects are not accepted | ipv6"
        sysctl:
            name: '{{ item.name }}'
            value: '{{ item.value }}'
            sysctl_set: true
            state: present
            reload: true
            ignoreerrors: true
        with_items:
            - {name: net.ipv6.conf.all.accept_redirects, value: 0}
            - {name: net.ipv6.conf.default.accept_redirects, value: 0}
        when:
        notify:
            - sysctl flush ipv6 route table
  when:
      - icmp_redirects_are_not_accepted

- name: "Ensure secure ICMP redirects are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - {name: net.ipv4.conf.all.secure_redirects, value: 0}
      - {name: net.ipv4.conf.default.secure_redirects, value: 0}
  when:
      - secure_icmp_redirects_are_not_accepted
  notify:
      - sysctl flush ipv4 route table

- name: "Ensure suspicious packets are logged"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - {name: net.ipv4.conf.all.log_martians, value: 1}
      - {name: net.ipv4.conf.default.log_martians, value: 1}
  when:
      - suspicious_packets_are_logged
  notify:
      - sysctl flush ipv4 route table

- name: "Ensure broadcast ICMP requests are ignored"
  sysctl:
      name: net.ipv4.icmp_echo_ignore_broadcasts
      value: "1"
      state: present
      reload: true
      ignoreerrors: true
  when:
      - broadcast_icmp_requests_are_ignored
  notify:
      - sysctl flush ipv4 route table

- name: "Ensure bogus ICMP responses are ignored"
  sysctl:
      name: net.ipv4.icmp_ignore_bogus_error_responses
      value: "1"
      state: present
      reload: true
      ignoreerrors: true
  when:
      - bogus_icmp_responses_are_ignored
  notify:
      - sysctl flush ipv4 route table

- name: "Ensure Reverse Path Filtering is enabled"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      sysctl_set: true
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - {name: net.ipv4.conf.all.rp_filter, value: 1}
      - {name: net.ipv4.conf.default.rp_filter, value: 1}
  when:
      - reverse_path_filtering_is_enabled
  notify:
      - sysctl flush ipv4 route table


- name: "Ensure TCP SYN Cookies is enabled"
  sysctl:
      name: net.ipv4.tcp_syncookies
      value: '1'
      state: present
      reload: true
      ignoreerrors: true
  when:
      - tcp_syn_cookies_is_enabled
  notify:
      - sysctl flush ipv4 route table

- name: "Ensure IPv6 router advertisements are not accepted"
  sysctl:
      name: '{{ item.name }}'
      value: '{{ item.value }}'
      state: present
      reload: true
      ignoreerrors: true
  with_items:
      - {name: net.ipv6.conf.all.accept_ra, value: 0}
      - {name: net.ipv6.conf.default.accept_ra, value: 0}
  when:
      - ipv6_router_advertisements_are_not_accepted
  notify:
      - sysctl flush ipv6 route table

- name: "Firewall Configuration"
  apt:
      name:
          - firewalld
          - iptables
          - nftables
          - ufw
      state: absent
  when:
      - var_firewall == "none"
      - firewall_configuration
